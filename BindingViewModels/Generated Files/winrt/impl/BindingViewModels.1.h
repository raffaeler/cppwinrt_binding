// WARNING: Please don't edit this file. It was generated by C++/WinRT v1.0.180227.3

#pragma once
#include "winrt/impl/Windows.UI.Xaml.Controls.0.h"
#include "winrt/impl/Windows.UI.Xaml.Data.0.h"
#include "winrt/impl/Windows.UI.Xaml.0.h"
#include "winrt/impl/BindingViewModels.0.h"

WINRT_EXPORT namespace winrt::BindingViewModels {

struct WINRT_EBO IBinding1 :
    Windows::Foundation::IInspectable,
    impl::consume_t<IBinding1>
{
    IBinding1(std::nullptr_t = nullptr) noexcept {}
};

struct WINRT_EBO IBinding2 :
    Windows::Foundation::IInspectable,
    impl::consume_t<IBinding2>
{
    IBinding2(std::nullptr_t = nullptr) noexcept {}
};

struct WINRT_EBO IMainPage :
    Windows::Foundation::IInspectable,
    impl::consume_t<IMainPage>
{
    IMainPage(std::nullptr_t = nullptr) noexcept {}
};

struct WINRT_EBO IMainViewModel :
    Windows::Foundation::IInspectable,
    impl::consume_t<IMainViewModel>
{
    IMainViewModel(std::nullptr_t = nullptr) noexcept {}
};

struct WINRT_EBO IPerson :
    Windows::Foundation::IInspectable,
    impl::consume_t<IPerson>
{
    IPerson(std::nullptr_t = nullptr) noexcept {}
};

struct WINRT_EBO IPersonFactory :
    Windows::Foundation::IInspectable,
    impl::consume_t<IPersonFactory>
{
    IPersonFactory(std::nullptr_t = nullptr) noexcept {}
};

}
